@import ../utils/variables
@import ../utils/mixins
@import ../../libs/include-media/dist/include-media

/* === LAYOUT ===
html
	font-size: 62.5%

	// блокировка скролла
	&.css-scroll-fixed:not(.open-only-mob)
		+scroll-blocked

	&.css-scroll-fixed.open-only-mob
		+media('<tab-lg')
			+scroll-blocked

.max-wrap
	max-width: $page-layout-width

.layout
	+padding-horizontal(nth($page-layout-space, 2))
	+push-auto

	+media('<mob-lg')
		+padding-horizontal(nth($page-layout-space--mob, 2))

.layout-space
	+padding-horizontal(nth($page-layout-space, 2))

	+media('<mob-lg')
		+padding-horizontal(nth($page-layout-space--mob, 2))

// выравнивание текстовых элементов на странице статьи (контент обернут в .layout-article)
// и их максимальная ширина
//.layout-article
.#{$user-content}
	& > p, & > ul, & > ol,
	& > h2, & > h3, & > h4, & > h5, & > h6,
	& > .h2, & > .h3, & > .h4, & > .h5, & > .h6,
	& > hr, & > blockquote,
	& > .layout-text

		max-width: $text-layout-width
		+padding-horizontal(0)
		+push-auto

	.layout-flood
		max-width: $flood-layout-width
		+padding-horizontal(0)
		+push-auto

	// элеметы без отступов по бокам
	// минусовые маржины по горизонтале имеют значение только внутри .layout-article
	.layout-full-width, .layout-wide

		+margin-horizontal(-#{nth($text-layout-space, 2)})

		+media('<tab-lg')
			+margin-horizontal(-#{nth($text-layout-space--md, 2)})

		+media('<tab-sm')
			+margin-horizontal(-#{nth($text-layout-space--sm, 2)})

// максимальная ширина текстовых элементов на внутренней (текстовой) странице
.max-wrap-text
	//max-width: #{$text-layout-width + (nth($text-layout-space, 2))*2}
	max-width: $text-layout-width

	//+media('<tab-lg')
		max-width: #{$text-layout-width + (nth($text-layout-space--md, 2))*2}

	//+media('<tab-sm')
		max-width: #{$text-layout-width + (nth($text-layout-space--sm, 2))*2}

// выравнивание текстовых элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-text
	max-width: #{$text-layout-width + (nth($text-layout-space, 2))*2}
	+padding-horizontal(nth($text-layout-space, 2))
	+push-auto

	+media('<tab-lg')
		max-width: #{$text-layout-width + (nth($text-layout-space--md, 2))*2}
		+padding-horizontal(nth($text-layout-space--md, 2))

	+media('<tab-sm')
		max-width: #{$text-layout-width + (nth($text-layout-space--sm, 2))*2}
		+padding-horizontal(nth($text-layout-space--sm, 2))

// максимальная ширина альтернативных элементов на внутренней (текстовой) странице
.max-wrap-flood
	//max-width: #{$flood-layout-width + (nth($text-layout-space, 2))*2}
	max-width: $flood-layout-width

	//+media('<tab-lg')
		max-width: #{$flood-layout-width + (nth($text-layout-space--md, 2))*2}

	//+media('<tab-sm')
		max-width: #{$flood-layout-width + (nth($text-layout-space--mob, 2))*2}

// выравнивание альтернативных элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-flood
	max-width: #{$flood-layout-width + (nth($text-layout-space, 2))*2}
	+padding-horizontal((nth($text-layout-space, 2)))
	+push-auto

	+media('<tab-lg')
		max-width: #{$flood-layout-width + (nth($text-layout-space--md, 2))*2}
		+padding-horizontal((nth($text-layout-space--md, 2)))

	+media('<tab-sm')
		max-width: #{$flood-layout-width + (nth($text-layout-space--sm, 2))*2}
		+padding-horizontal((nth($text-layout-space--sm, 2)))

	p, ul, ol, h2, h3, h4, h5, h6, hr
	.h2, .h3, .h4, .h5, .h6
		max-width: none

// элеметы с отступами по бокам
.layout-wide
	+padding-horizontal((nth($text-layout-space, 2)))

	+media('<tab-lg')
		+padding-horizontal((nth($text-layout-space--md, 2)))

	+media('<tab-sm')
		+padding-horizontal((nth($text-layout-space--sm, 2)))

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// элеметы без отступов по бокам
.layout-full-width

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// выравнивание по центру блочных элементов
.push-auto
	margin-left: auto
	margin-right: auto

// layout страницы
.wrapper
	position: relative
	display: flex
	flex-direction: column
	justify-content: space-between
	align-items: stretch
	margin: 0 auto
	//min-height: 100%
	height: 100%
	max-width: 100%
	width: $page-layout-width

/* === LAYOUT end ===

/* === CONTENT ===
.main
	flex-shrink: 1
	flex-grow: 1
	position: relative
	clear: both
	z-index: $z-main
	padding-bottom: $bottom-space--section

.main,
.c-heading__align
	margin-right: $heading-width
	width: calc(100% - #{$heading-width})

//.main__holder
	width: 100%
	+clear

//.content-wrap
	float: left
	width: 100%

.content
	//margin: 0 200px 0 300px
	min-height: 50px

	background-color: whitesmoke

	+media('<desk-lg')
		margin-right: 0

	+media('<tab-lg')
		margin-left: 0

/* === CONTENT end ===

/* === HEADER ===
.header
	position: fixed
	left: 0
	top: 0
	height: 0
	width: 100%
	z-index: $z-header

.header__layout
	position: relative
	margin: 0 auto

.header__holder
	position: absolute
	right: 0
	top: 0
	height: 100vh
	width: $heading-width
	padding: nth($page-layout-space, 1) 60px
	background-color: $heading-bg
	z-index: $z-header
	+clear

//egg
.egg
	position: absolute
	top: 100vh
	right: 0
	background: url(../../img/egg.png) no-repeat
	width: 590px
	height: 450px
	margin: -450px 0 0
	z-index: $z-egg

	display: none

//logo
.logo
	display: block
	position: relative
	background: url(../../img/logo.png) no-repeat
	width: 341px
	height: 36px
	text-indent: -9999px
	overflow: hidden
	margin-bottom: $bottom-space--section
	z-index: 5

	a, & > span
		display: block
		height: 100%

/* === HEADER end ===

/* === NAVIGATION ===
.nav
	position: relative

.nav__list
	position: relative
	list-style: none
	margin: 0 0 42px
	padding: 0
	+font($font-size--small, $line-height--small)

	li
		margin-bottom: 12px

		&.high
			+font-bold
			+font(3.6rem, round-float(49/36, 2))

		&:last-child
			margin-bottom: 0

	a
		color: $base-color
		text-decoration: none
		// transition
		$prop: color
		transition:
			property: $prop
			duration: $animation-speed

	li.current a,
	a:hover
		text-decoration: none
		color: $highlight-color

/* === NAVIGATION end ===

/* === FOOTER ===
.footer
	position: relative
	z-index: $z-footer
	background-color: $base-color

.footer__holder
	display: flex
	flex-wrap: wrap
	//margin: -#{$bottom-space--article} -#{nth($footer-box-space, 2)} 0

//.f-boxes
	width: 50%

.f-col
	width: calc(100% / 4)

.f-box
	width: calc(100% / 4)
	padding: $footer-box-space

	.f-col &
		width: 100%

	.f-box__title
		+font-bold
		+font(2.6rem, round-float(30/26, 2))
		margin-bottom: $bottom-space--row

.f-box_form
	width: calc(100% / 2)
	background-color: $base-color-alt


/* === FOOTER end ===

//.header
	transition: 0.3s width ease-in-out

//.header.main-homepage
	width: 50vw

//.main.main-homepage
	margin-right: 55vw

// heading
.heading
	text-align: center
	padding: nth($page-layout-space, 1) 0 0
	margin-bottom: $bottom-space--element

.c-heading
	$tf: cubic-bezier(0.4, 0.6, 0.2, 1)
	opacity: 0
	transition:
		property: opacity, animation
		duration: 0.8s
		timing-function: $tf

	animation:
		duration: 1s
		timing-function: $tf

	&.is-active
		opacity: 1
		transition:
			delay: 0.2s
		animation:
			fill-mode: forwards
			name: showHeading

	&.is-leaving
		opacity: 0
		animation:
			fill-mode: forwards
			duration: 0s
			delay: 1s
			name: hideHeading

		transition:
			timing-function: ease-in-out

$c-heading-y: 60vh
@keyframes showHeading
	0%
		transform: translate(0, $c-heading-y)

	30%
		transform: translate(0, $c-heading-y)

	100%
		transform: translate(0, 0)

@keyframes hideHeading
	0%
		transform: translate(0, 0)

	100%
		transform: translate(0, $c-heading-y)

///* ===========================================
// * SmoothState styling
// * ===========================================
//.m-scene .scene-main
	animation-duration: .25s
	transition-timing-function: ease-in
	animation-fill-mode: both

//.m-scene .scene-main--fadein
	animation-name: fadeIn

//.m-scene.is-exiting .scene-main
	animation-direction: alternate-reverse

//.m-scene .header.main-homepage
	animation-duration: .25s
	transition-timing-function: ease-in
	animation-fill-mode: both
	animation-name: width

//.m-scene.is-exiting .header.main-homepage
	animation-direction: alternate-reverse

//@keyframes fadeIn
	0%
		opacity: 0

	100%
		opacity: 1

//@keyframes width
	0%
		width: $heading-width

	100%
		width: 50vw

// c-transition
.c-transition
	//background-color: #343399
	background-color: #2a2971
	cursor: wait
	height: 100vh
	left: 0

	overflow: hidden
	pointer-events: none
	position: fixed
	top: 100vh
	transform: translate3d(0, 100%, 0)
	width: 100%
	z-index: $z-loader

.c-transition .u-h1
	left: 50%
	position: absolute
	text-align: center
	top: 50%
	transform: translate(-50%, 100vh)
	transition: transform 1s cubic-bezier(0.4, 0.6, 0.2, 1)
	transition-delay: 0.2s

.c-transition.is-active
	animation-delay: 0s
	animation-duration: 1s
	animation-fill-mode: forwards
	animation-name: fade-in
	animation-timing-function: cubic-bezier(0.55, 0.085, 0, 0.99)
	top: 0

.c-transition.is-active .u-h1
	transform: translate(-50%, -50%)

.c-transition.is-leaving
	animation-duration: 1s
	animation-name: fade-out

.c-transition.is-leaving .u-h1
	transform: translate(-50%, -100vh)
	transition-delay: 0s

@keyframes fade-out
	0%
		transform: translateZ(0)

	to
		transform: translate3d(0, -100%, 0)

@keyframes fade-in
	0%
		transform: translate3d(0, 100%, 0)

	to
		transform: translateZ(0)

/* heading
.c-heading
	position: fixed
	height: 0
	top: 0
	left: 0
	width: 100%
	z-index: $z-heading
	pointer-events: none

	//h1
		color: red

.c-heading__layout
	position: relative

/* heading end