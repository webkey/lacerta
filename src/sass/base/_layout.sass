@import ../utils/variables
@import ../utils/mixins
@import ../../libs/include-media/dist/include-media

/* === LAYOUT ===
html
	font-size: 62.5%
	//+scroll-blocked

	// блокировка скролла
	&.css-scroll-fixed:not(.open-only-mob)
		+scroll-blocked

	&.css-scroll-fixed.open-only-mob
		+media('<desk-lg')
			+scroll-blocked

.max-wrap
	max-width: $page-layout-width

.layout
	+padding-horizontal(nth($page-layout-space, 2))
	+push-auto

	+media('<desk-lg')
		+padding-horizontal(nth($page-layout-space--md, 2))

	+media('<tab-lg')
		+padding-horizontal(nth($page-layout-space--mob, 2))

.layout-space
	+padding-horizontal(nth($page-layout-space, 2))

	+media('<desk-lg')
		+padding-horizontal(nth($page-layout-space--md, 2))

	+media('<tab-lg')
		+padding-horizontal(nth($page-layout-space--mob, 2))

// выравнивание текстовых элементов на странице статьи (контент обернут в .layout-article)
// и их максимальная ширина
//.layout-article
.#{$user-content}:not(.home-page)
	& > p, & > ul, & > ol,
	& > h2, & > h3, & > h4, & > h5, & > h6,
	& > .h2, & > .h3, & > .h4, & > .h5, & > .h6,
	& > hr, & > blockquote,
	& > .layout-text

		max-width: $text-layout-width
		+padding-horizontal(0)
		+push-auto

	.layout-flood
		max-width: $flood-layout-width
		+padding-horizontal(0)
		+push-auto

	// элеметы без отступов по бокам
	// минусовые маржины по горизонтале имеют значение только внутри .layout-article
	.layout-full-width, .layout-wide

		+margin-horizontal(-#{nth($text-layout-space, 2)})

		+media('<tab-lg')
			+margin-horizontal(-#{nth($text-layout-space--md, 2)})

		+media('<tab-sm')
			+margin-horizontal(-#{nth($text-layout-space--sm, 2)})

// максимальная ширина текстовых элементов на внутренней (текстовой) странице
.max-wrap-text
	//max-width: #{$text-layout-width + (nth($text-layout-space, 2))*2}
	max-width: $text-layout-width

	//+media('<tab-lg')
		max-width: #{$text-layout-width + (nth($text-layout-space--md, 2))*2}

	//+media('<tab-sm')
		max-width: #{$text-layout-width + (nth($text-layout-space--sm, 2))*2}

// выравнивание текстовых элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-text
	max-width: #{$text-layout-width + (nth($text-layout-space, 2))*2}
	+padding-horizontal(nth($text-layout-space, 2))
	+push-auto

	+media('<tab-lg')
		max-width: #{$text-layout-width + (nth($text-layout-space--md, 2))*2}
		+padding-horizontal(nth($text-layout-space--md, 2))

	+media('<tab-sm')
		max-width: #{$text-layout-width + (nth($text-layout-space--sm, 2))*2}
		+padding-horizontal(nth($text-layout-space--sm, 2))

// максимальная ширина альтернативных элементов на внутренней (текстовой) странице
.max-wrap-flood
	//max-width: #{$flood-layout-width + (nth($text-layout-space, 2))*2}
	max-width: $flood-layout-width

	//+media('<tab-lg')
		max-width: #{$flood-layout-width + (nth($text-layout-space--md, 2))*2}

	//+media('<tab-sm')
		max-width: #{$flood-layout-width + (nth($text-layout-space--mob, 2))*2}

// выравнивание альтернативных элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-flood
	max-width: #{$flood-layout-width + (nth($text-layout-space, 2))*2}
	+padding-horizontal((nth($text-layout-space, 2)))
	+push-auto

	+media('<tab-lg')
		max-width: #{$flood-layout-width + (nth($text-layout-space--md, 2))*2}
		+padding-horizontal((nth($text-layout-space--md, 2)))

	+media('<tab-sm')
		max-width: #{$flood-layout-width + (nth($text-layout-space--sm, 2))*2}
		+padding-horizontal((nth($text-layout-space--sm, 2)))

	p, ul, ol, h2, h3, h4, h5, h6, hr,
	.h2, .h3, .h4, .h5, .h6
		max-width: none

// элеметы с отступами по бокам
.layout-wide
	+padding-horizontal((nth($text-layout-space, 2)))

	+media('<tab-lg')
		+padding-horizontal((nth($text-layout-space--md, 2)))

	+media('<tab-sm')
		+padding-horizontal((nth($text-layout-space--sm, 2)))

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// элеметы без отступов по бокам
.layout-full-width

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// выравнивание по центру блочных элементов
.push-auto
	margin-left: auto
	margin-right: auto

// layout страницы
.wrapper
	position: relative
	display: flex
	flex-direction: column
	justify-content: space-between
	align-items: stretch
	margin: 0 auto
	//min-height: 100%
	height: 100%
	max-width: 100%
	width: $page-layout-width

/* === LAYOUT end ===

/* === CONTENT ===
.main
	flex-shrink: 1
	flex-grow: 1
	position: relative
	clear: both
	z-index: $z-main
	padding-bottom: $bottom-space--section

.main,
.c-heading__align
	margin-right: $header-width
	width: calc(100% - #{$header-width})

	+media('<desk-lg')
		margin-right: 0
		width: 100%
		padding-top: $header-height--md

//.main__holder
	width: 100%
	+clear

//.content-wrap
	float: left
	width: 100%

.content
	//margin: 0 200px 0 300px
	min-height: 50px

	background-color: whitesmoke

	+media('<desk-lg')
		margin-right: 0

	+media('<tab-lg')
		margin-left: 0

/* === CONTENT end ===

/* === HEADER ===
.header
	position: fixed
	left: 0
	top: 0
	height: 0
	width: 100%
	z-index: $z-header

	+media('<desk-lg')
		z-index: $z-footer

.header__layout
	position: relative
	margin: 0 auto

.header__holder
	position: absolute
	right: 0
	top: 0
	height: $header-height
	width: $header-width
	padding: nth($page-layout-space, 1) 60px
	z-index: $z-header
	background-color: $header-bg
	+clear

	+media('<desk-lg')
		right: auto
		left: 0
		height: 0
		width: $header-width--md
		padding: 0
		z-index: $z-footer

//header top
.header__top
	position: relative
	//margin-bottom: 10.6rem
	margin-bottom: 7rem

	+media('<desk-lg')
		display: flex
		justify-content: space-between
		align-items: center
		height: $header-height--md
		margin: 0
		padding: 1rem nth($page-layout-space--md, 2)
		background-color: $header-bg
		z-index: $z-footer

	+media('<tab-lg')
		padding: 1rem nth($page-layout-space--mob, 2)

	&:last-child
		margin-bottom: 0

//logo
.logo
	display: block
	position: relative
	background: url(../../img/logo.png) no-repeat
	width: 341px
	height: 36px
	text-indent: -9999px
	overflow: hidden
	z-index: 5

	a, & > span
		display: block
		height: 100%

//header-menu
.header-menu
	display: none
	$hs: 6rem
	list-style: none
	padding: 0
	//margin: 0 -#{round($hs / 2)}
	margin: 0
	+font-bold
	//+font(3.6rem, $header-height--md)
	+font(3.6rem, round-float(40/36, 2))
	+clear

	+media('<desk-lg')
		display: block
		padding-right: $header-height--md

	+media('<tab-lg')
		display: none

	li
		float: left
		//+padding-horizontal(round($hs / 2))
		padding-left: $hs

		&:first-child
			padding-left: 0

	a
		color: $base-color
		transition: color $animation-speed ease-in-out

	// current
	li.current
		a
			color: $highlight-color

//egg
.egg
	position: absolute
	top: 380px
	left: -139px
	background: url(../../img/egg.png) no-repeat
	-webkit-background-size: contain
	background-size: contain
	width: 590px
	z-index: $z-egg
	font-size: 0
	line-height: 0
	overflow: hidden
	//display: none

	&::before
		content: ""
		position: relative
		display: block
		+ratio(590px, 450px)

	+media('<desk-lg')
		left: auto
		right: -190px
		top: auto
		bottom: -36px
		width: 470px

/* === HEADER end ===

/* === NAVIGATION ===
.nav-wrap
	position: relative
	overflow: hidden
	background-color: $header-bg
	$prop: transform, opacity
	will-change: $prop
	transition:
		property: transform, opacity
		duration: $animation-speed

	+media('<desk-lg')
		position: absolute
		left: 0
		top: $header-height--md
		width: 100%
		padding: $page-layout-space--md
		z-index: $z-footer - 1

		$translate: 0, -100%
		//$translate: 0, 0
		transform: translate($translate) // for old browser
		transform: translate3d($translate, 0)

	&.#{$nav-is-open-class}, // add js
	.no-js &
		+media('<desk-lg')
			$translate: 0, 0
			transform: translate($translate) // for old browser
			transform: translate3d($translate, 0)

	+media('<tab-lg')
		padding: $page-layout-space--mob

.nav
	position: relative

	+media('<desk-lg')
		opacity: 0
		// transition
		$prop: transform, opacity
		will-change: $prop
		transition:
			property: $prop
			duration: $animation-speed * 2
			timing-function: ease-in-out

	.#{$nav-is-open-class} &
		+media('<desk-lg')
			opacity: 1
			transition-delay: $animation-speed / 2

.nav__list
	position: relative
	list-style: none
	//margin: 0 0 4.2rem
	margin: 0 0 3rem
	padding: 0
	+font($font-size--small, $line-height--small)

	li
		//margin-bottom: 1.3rem
		margin-bottom: 0.5rem

		&.high
			+font-bold
			+font(3.6rem, round-float(49/36, 2))
			margin-bottom: 0

		&:last-child
			margin-bottom: 0

	a
		color: $base-color
		text-decoration: none
		// transition
		transition: color $animation-speed ease-in-out

	li.current a,
	a:hover
		text-decoration: none
		color: $highlight-color

// nav opener btn
a.nav-opener
	$btn-menu-bg: transparent
	$btn-menu-size: $header-height--md
	$btn-menu-lines-width: 43px
	$btn-menu-lines-height: 7px
	$btn-menu-lines-space: 7px
	$btn-menu-lines-color: $highlight-color
	$btn-menu-lines-color--mob: currentColor
	$btn-menu-animation-speed: $animation-speed
	$btn-menu-animation-delay: round-float($animation-speed*0.5, 2)

	$user-options-cross-width: $btn-menu-lines-width
	$user-options-cross-height: $btn-menu-lines-height
	$user-options-cross-color: $btn-menu-lines-color
	$user-options-cross-color--mob: $btn-menu-lines-color--mob

	// =====================

	display: none
	position: absolute
	right: nth($page-layout-space--md, 2)
	top: round($header-height--md / 2)
	margin-top: -#{round($btn-menu-size/2)}
	z-index: $z-footer
	+size($btn-menu-size)
	text-decoration: none
	+font-normal
	+font($font-size, $line-height)
	letter-spacing: $letter-spacing
	color: $text-color
	background-color: $btn-menu-bg
	user-select: none
	-webkit-tap-highlight-color: transparent

	+media('<desk-lg')
		display: block

	+media('<tab-lg')
		right: nth($page-layout-space--mob, 1)

	.touchevents &
		// убрать подсветку при клике на тачскринах
		user-select: none
		-webkit-tap-highlight-color: transparent

	& > span
		position: absolute
		left: 100%
		top: 0
		height: 100%
		+padding-horizontal(5px)
		+font-bold
		line-height: $header-height--md
		display: none

		+media('<tab-sm')
			display: block

		+media('<mob-sm')
			display: none

	// крест
	&::before, &::after
		+pseudo()
		+size($user-options-cross-height, $user-options-cross-width)
		background-color: $user-options-cross-color
		+position(50%)
		margin-top: -#{round($user-options-cross-height / 2)}
		margin-left: -#{round($user-options-cross-width / 2)}
		opacity: 0
		$prop: transform, opacity, background-color
		will-change: $prop
		transition:
			property: $prop
			duration: $btn-menu-animation-speed
			delay: 0s
			timing-function: cubic-bezier(0.65, 0.05, 0.36, 1)

		+media('<mob-sm')
			background-color: $user-options-cross-color--mob

	// бутерброд
	& > i
		position: absolute
		left: 50%
		top: 50%
		+size($btn-menu-lines-height, $btn-menu-lines-width + 10)
		//+size($btn-menu-lines-height, $btn-menu-lines-width + 10)
		//max-width: $btn-menu-lines-width + 10
		background-color: $btn-menu-lines-color
		margin-top: -#{round($btn-menu-lines-height / 2)}
		margin-left: -#{round($btn-menu-lines-width / 2)}
		$prop: transform, opacity, background-color, max-width
		will-change: $prop
		transition:
			property: $prop
			duration: $btn-menu-animation-speed
			delay: $btn-menu-animation-delay

		+media('<mob-sm')
			background-color: $btn-menu-lines-color--mob

		&::before, &::after
			+pseudo()
			left: 0
			+size($btn-menu-lines-height, $btn-menu-lines-width)
			background-color: inherit
			$prop: transform, max-width
			will-change: $prop
			transition:
				property: $prop
				duration: $btn-menu-animation-speed
				delay: $btn-menu-animation-delay

			+media('<mob-sm')
				background-color: $btn-menu-lines-color--mob

		//first line menu
		&::before
			top: -#{$btn-menu-lines-height + $btn-menu-lines-space}
			max-width: $btn-menu-lines-width - 9

		//third line menu
		&::after
			top: #{$btn-menu-lines-height + $btn-menu-lines-space}

	// hover
	.no-touchevents &:hover
		//background-color: #f3f3f3

		&::before, &::after
			background-color: $highlight-color--hover

		& > i
			background-color: $highlight-color--hover
			//max-width: $btn-menu-lines-width

			&::before, &::after
				background-color: inherit

			//&::before
				max-width: $btn-menu-lines-width

	// active
	&.nav-is-open

		&::before, &::after
			transition-delay: $btn-menu-animation-delay
			//background-color: $base-color

			opacity: 1

		&::before
			transform: rotate(45deg) translateZ(0)

		&::after
			transform: rotate(-45deg) translateZ(0)

		& > i
			opacity: 0
			transition-delay: 0s

			&::before, &::after
				transition-delay: 0s

			&::before
				transform: translate(0, #{$btn-menu-lines-height + $btn-menu-lines-space}) translateZ(0)

			&::after
				transform: translate(0, -#{$btn-menu-lines-height + $btn-menu-lines-space}) translateZ(0)

// overlay
// в html добавить
// <div class="nav-overlay nav-overlay-js">&nbsp;</div>
.overlay
	display: none
	position: fixed
	left: 0
	top: 0
	width: 100%
	height: 100%
	background-color: rgba(black, 0.35)
	z-index: 9998
	box-sizing: border-box
	opacity: 0
	visibility: hidden
	$prop: opacity, visibility
	will-change: $prop
	transition:
		property: $prop
		duration: $animation-speed

	&.nav-overlay
		top: 0
		height: 100%

	&.open-only-mob
		+media('>=desk-lg')
			display: none

	&.#{$nav-is-open-class}
		opacity: 1
		visibility: visible

	&.filters-is-open, &.request-is-open
		opacity: 1
		visibility: visible

/* navigation end

/* === NAVIGATION end ===

/* === FOOTER ===
.footer
	position: relative
	width: 100%
	padding-top: nth($page-layout-space, 1)
	padding-bottom: nth($page-layout-space, 1) + 3rem
	z-index: $z-footer
	background-color: $base-color
	border-top: 5px solid #363c9b

	+media('<desk-lg')
		+padding-vertical(nth($footer-box-space--md, 1))
		z-index: $z-header

	+media('<tab-lg')
		+padding-vertical(nth($footer-box-space--mob, 1))

	&::before
		content: ""
		display: block
		position: absolute
		left: 50%
		width: 50%
		height: 100%
		top: 0
		z-index: -1
		background-color: $base-color-alt

		+media('<desk-lg')
			display: none

.footer__holder
	margin: -#{nth($footer-box-space, 1)} -#{nth($footer-box-space, 2)}
	+clear

	+media('<desk-lg')
		display: flex
		flex-wrap: wrap
		align-items: stretch
		margin: -#{nth($footer-box-space--md, 1)} -#{nth($footer-box-space--md, 2)}

	+media('<tab-lg')
		margin: -#{nth($footer-box-space--mob, 1)} -#{nth($footer-box-space--mob, 2)}

//.f-boxes
	width: 50%

.f-col
	width: calc(100% / 4)
	min-height: 1px
	+clear

	+media('<desk-lg')
		width: calc(100% / 3)

		&::after
			content: none

.f-box
	min-height: 1px
	padding: $footer-box-space

	+media('<desk-lg')
		padding: $footer-box-space--md

	+media('<tab-lg')
		padding: $footer-box-space--mob

	.f-box__title
		+font-bold
		+font(2.6rem, round-float(30/26, 2))
		margin-bottom: $bottom-space--row

// footer box appeal form
.f-box_form
	background-color: $base-color-alt

	+media('<desk-lg')
		position: relative

// footer box developer
.developer
	text-align: right
	position: absolute
	right: 0
	bottom: 0
	padding: 0 nth($page-layout-space, 2) nth($page-layout-space, 1) 0
	width: auto

	+media('<desk-lg')
		position: relative
		right: auto
		bottom: auto
		padding: 0

.req
	+media('<desk-lg')
		margin-bottom: nth($footer-box-space--md, 1)

	+media('<tab-lg')
		margin-bottom: nth($footer-box-space--md, 1)

	&:last-child
		margin-bottom: 0

// footer order
.f-box
	width: calc(100% / 4)

	+media('<desk-lg')
		width: calc(100% / 3)

	.f-col &
		width: 100%

.f-col_nav
	//order: 1
	float: left

	+media('<desk-lg')
		float: none
		display: flex
		flex-direction: column
		justify-content: space-between

.f-col_cont
	//order: 2
	float: right
	width: calc(100% / 4 * 3)

	+media('<desk-lg')
		float: none
		display: flex
		flex-wrap: wrap
		width: calc(100% / 3 * 2)

	.f-box_cont, .f-box_req
		float: left
		width: calc(100% / 3 * 1)
		clear: left

		+media('<desk-lg')
			float: none
			width: calc(100% / 2 * 1)

	.f-box_form
		float: right
		width: calc(100% / 3 * 2)

		+media('<desk-lg')
			float: none
			width: 100%

/* === FOOTER end ===

//.header
	transition: 0.3s width ease-in-out

//.header.main-homepage
	width: 50vw

//.main.main-homepage
	margin-right: 55vw

// heading
.heading
	text-align: center
	padding: nth($page-layout-space, 1) 0 0
	margin-bottom: $bottom-space--article

	+media('<desk-lg')
		padding: nth($page-layout-space--md, 1) 0 0

	+media('<desk-lg')
		padding: nth($page-layout-space--mob, 1) 0 0

.c-heading
	$tf: cubic-bezier(0.4, 0.6, 0.2, 1)
	opacity: 0
	transition:
		property: opacity, animation
		duration: 0.8s
		timing-function: $tf

	animation:
		duration: 1s
		timing-function: $tf

	&.is-active
		opacity: 1
		transition:
			delay: 0.2s
		animation:
			fill-mode: forwards
			name: showHeading

	&.is-leaving
		opacity: 0
		animation:
			fill-mode: forwards
			duration: 0s
			delay: 1s
			name: hideHeading

		transition:
			timing-function: ease-in-out

$c-heading-y: 60vh
@keyframes showHeading
	0%
		transform: translate(0, $c-heading-y)

	30%
		transform: translate(0, $c-heading-y)

	100%
		transform: translate(0, 0)

@keyframes hideHeading
	0%
		transform: translate(0, 0)

	100%
		transform: translate(0, $c-heading-y)

///* ===========================================
// * SmoothState styling
// * ===========================================
//.m-scene .scene-main
	animation-duration: .25s
	transition-timing-function: ease-in
	animation-fill-mode: both

//.m-scene .scene-main--fadein
	animation-name: fadeIn

//.m-scene.is-exiting .scene-main
	animation-direction: alternate-reverse

//.m-scene .header.main-homepage
	animation-duration: .25s
	transition-timing-function: ease-in
	animation-fill-mode: both
	animation-name: width

//.m-scene.is-exiting .header.main-homepage
	animation-direction: alternate-reverse

//@keyframes fadeIn
	0%
		opacity: 0

	100%
		opacity: 1

//@keyframes width
	0%
		width: $heading-width

	100%
		width: 50vw

// c-transition
.c-transition
	//background-color: #343399
	background-color: #2a2971
	cursor: wait
	height: 100vh
	left: 0

	overflow: hidden
	pointer-events: none
	position: fixed
	top: 100vh
	transform: translate3d(0, 100%, 0)
	width: 100%
	z-index: $z-loader

.c-transition .u-h1
	left: 50%
	position: absolute
	text-align: center
	top: 50%
	transform: translate(-50%, 100vh)
	transition: transform 1s cubic-bezier(0.4, 0.6, 0.2, 1)
	transition-delay: 0.2s

.c-transition.is-active
	animation-delay: 0s
	animation-duration: 1s
	animation-fill-mode: forwards
	animation-name: fade-in
	animation-timing-function: cubic-bezier(0.55, 0.085, 0, 0.99)
	top: 0

.c-transition.is-active .u-h1
	transform: translate(-50%, -50%)

.c-transition.is-leaving
	animation-duration: 1s
	animation-name: fade-out

.c-transition.is-leaving .u-h1
	transform: translate(-50%, -100vh)
	transition-delay: 0s

@keyframes fade-out
	0%
		transform: translateZ(0)

	to
		transform: translate3d(0, -100%, 0)

@keyframes fade-in
	0%
		transform: translate3d(0, 100%, 0)

	to
		transform: translateZ(0)

/* heading
.c-heading
	position: fixed
	height: 0
	top: 0
	left: 0
	width: 100%
	z-index: $z-heading
	pointer-events: none

	//h1
		color: red

.c-heading__layout
	position: relative

/* heading end